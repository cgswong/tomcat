# #################################################################
# FILE: tomcat-sysctl.conf
#
# DESC: System configuration for Tomcat.
#       Place file under /etc/sysctl.d directory
#
# $HeadURL$
# $LastChangedBy$
# $LastChangedDate$
# $LastChangedRevision$
#
# LOG:
# yyyy/mm/dd [login] [notes]
# 2014/02/11 cgwong v1.0.0 Initial creation
# #################################################################

#-- Debugging settings
# enable "magic key" combination via keyboard invocation
kernel.sysrq = 1
 
# controls whether core dumps will append the PID to the core filename
# useful for debugging multi-threaded applications
kernel.core_uses_pid = 1
kernel.core_pattern = core.%e.%p
fs.suid_dumpable = 1
 
#-- Memory settings
# shmall is the total amount of shared memory, in pages, that the system can use at one time.
# Set shmall equal to the sum of all JVMs on the system, divided by the page size.
# shmall = SUM(JVM) / PAGE_SIZE (4096)
# Default to 64GB
kernel.shmall = 16777216
 
# set to greater of total amount of all JVMs or 1/2 of physical RAM
# 4GB RAM
kernel.shmmax = 4294967296
# 16GB RAM
##kernel.shmmax = 8589934592
# 32GB RAM
##kernel.shmmax = 17179869184
# 64GB RAM
##kernel.shmmax = 34359738368
# 128GB RAM
##kernel.shmmax = 68719476736

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536
# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536
 
#-- File I/O settings
fs.aio-max-nr = 3145728
# Maximum number of open files (typically 512 x processes)
# Assume 8192 processes
fs.file-max = 4194304
 
#-- Virtual memory
# set vm.min_free_kbytes kernel parameter to reserve 512MB
# allow the OS to reclaim memory faster and avoid LowMem pressure
vm.min_free_kbytes = 51200
 
# Set the vm.swappiness parameter to 0 to minimize swapping
vm.swappiness = 0

# The percentage of main memory the pdflush daemon should write data out to the disk
vm.dirty_background_ratio = 25

# The percentage of main memory the actual disk writes will take place.
vm.dirty_ratio = 15
vm.dirty_expire_centisecs = 500
vm.dirty_writeback_centisecs = 100

#-- Network settings
# increase TCP max buffer size (depending on the type of NIC and the round-trip time these values can be changed)
# Maximum TCP Receive Window
net.core.rmem_max = 8388608
net.core.rmem_default = 8388608

# Maximum TCP Send Window
net.core.wmem_max = 8388608
net.core.wmem_default = 8388608

# memory reserved for TCP receive buffers (vector of 3 integers: [min, default, max])
net.ipv4.tcp_rmem = 4096 87380 8388608

# memory reserved for TCP send buffers (vector of 3 integers: [min, default, max])
net.ipv4.tcp_wmem = 4096 87380 8388608

# increase the length of the processor input queue
net.core.netdev_max_backlog = 30000

# maximum amount of memory buffers (could be set equal to net.core.rmem_max and net.core.wmem_max)
net.core.optmem_max = 20480

# socket of the listen backlog
net.core.somaxconn = 1024

# tcp selective acknowledgements (disabled for high-speed networks)
net.ipv4.tcp_sack = 0
net.ipv4.tcp_dsack = 0

# Timestamps add 12 bytes to the TCP header
net.ipv4.tcp_timestamps = 1

# Support for large TCP Windows - Needs to be set to 1 if the Max TCP Window is over 65535
net.ipv4.tcp_window_scaling = 1

# The interval between the last data packet sent (simple ACKs are not considered data) and the first keepalive probe
net.ipv4.tcp_keepalive_time = 1800

# The interval between subsequential keepalive probes, regardless of what the connection has exchanged in the meantime
##net.ipv4.tcp_keepalive_intvl = 30

# The number of unacknowledged probes to send before considering the connection dead and notifying the application layer
net.ipv4.tcp_keepalive_probes = 5

# The time that must elapse before TCP/IP can release a closed connection and reuse its resources.
# During this TIME_WAIT state, reopening the connection to the client costs less than establishing a new connection.
# By reducing the value of this entry, TCP/IP can release closed connections faster, making more resources available for new connections.
net.ipv4.tcp_fin_timeout = 30

# Size of the backlog connections queue.
net.ipv4.tcp_max_syn_backlog = 4096

# The tcp_tw_reuse setting is particularly useful in environments where numerous short connections are open 
# and left in TIME_WAIT state, such as web servers. Reusing the sockets can be effective in reducing server load.
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1